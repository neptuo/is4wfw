<?xml version="1.0" encoding="utf-8" ?>
<taglib xmlns="http://schemas.neptuo.com/xsd/is4wfw/taglib.xsd">
  <count>1</count>
  <comment>
    Defaultní třída pro registrování a rušení c tag libs.
    Max jedna instance.
  </comment>
  <tag>
    <name>register</name>
    <function>register</function>
    <attribute>
      <name>tagPrefix</name>
      <type source="constant">string</type>
      <required />
      <comment>
        Prefix pod kterým bude objekt zaregistrován. 
        Může obsahovat pouze statické hodnoty (konstanty). Nikdy né proměnné a pod.
      </comment>
    </attribute>
    <attribute>
      <name>classPath</name>
      <type source="constant">string</type>
      <required />
      <comment>
        Jméno třídy. 
        Může obsahovat pouze statické hodnoty (konstanty). Nikdy né proměnné a pod.
      </comment>
    </attribute>
    <attribute>
      <name>param</name>
      <prefix default="merge" />
      <comment>
        Parametru předané konstruktoru vytvářené třídy.
      </comment>
    </attribute>
    <comment>
      Zaregistruje tag lib na základě předaných parametrů, kde:
      tagPrefix je prefix (př.: moje) pro nový objekt a classPath je cesta k souboru
      s požadovanou třídou (př.: php.libs.MyClass).
    </comment>
  </tag>
  <tag>
    <name>create</name>
    <function>create</function>
    <anyAttribute />
    <comment>
      Registruje instance knihoven k prefixům.
      Každý prefixovaný atribut registruje instanci knihovny.
      Všechny další atributy v daném prefixu jsou pak předány knihovně jako parametry konstruktoru.
    </comment>
  </tag>
  <tag>
    <name>lazy</name>
    <function>lazyTag</function>
    <anyAttribute />
    <comment>
      Doplňuje auto registrační pravidla knihoven k prefixům.
      Každý prefixovaný atribut registruje instanci knihovny.
      Všechny další atributy v daném prefixu jsou pak předány knihovně jako parametry konstruktoru.
    </comment>
  </tag>
  <tag>
    <name>unregister</name>
    <function>unregister</function>
    <attribute>
      <name>tagPrefix</name>
      <type source="constant">string</type>
      <required />
    </attribute>
    <comment>
      Zruší zaregistrovaný objekt specifikovaný tagPrefixem. Defaultní objekty nelze zrušit!
    </comment>
  </tag>
  <tag>
    <name>cache</name>
    <function>cache</function>
    <attribute>
      <name>allow</name>
      <required />
    </attribute>
    <comment>
      Nastaví cachování v aplikaci.
    </comment>
    <obsolete>Eh...</obsolete>
  </tag>
  <tag>
    <name>attribute</name>
    <function>setDefaultGlobalAttribute</function>
    <attribute>
      <name>prefix</name>
      <required />
      <comment>Prefix na který se má výchozí atribut aplikovat.</comment>
    </attribute>
    <attribute>
      <name>tag</name>
      <type source="constant">string</type>
      <required />
      <comment>Tag na který se má výchozí atribut aplikovat. Může být '*', pak se aplikuje na všechny tagy.</comment>
    </attribute>
    <attribute>
      <name>name</name>
      <type source="constant">string</type>
      <required />
      <comment>Název atributu.</comment>
    </attribute>
    <attribute>
      <name>value</name>
      <required />
      <comment>Hodnota atributu.</comment>
    </attribute>
    <comment>
      Nastaví výchozí hodnotu atributu "name" name "prefix":"tag", pokud není přepsán na samotném tagu.
    </comment>
  </tag>
  <fulltag>
    <name>using</name>
    <function>usingObject</function>
    <attribute>
      <name>prefix</name>
      <type source="constant">string</type>
      <required />
    </attribute>
    <attribute>
      <name>class</name>
      <type source="constant">string</type>
      <required />
    </attribute>
    <attribute>
      <name>param</name>
      <prefix default="merge" />
      <comment>
        Parametry předané konstruktoru vytvářené třídy.
      </comment>
    </attribute>
    <comment>
      Zaregistruje tag lib, který je možný používat v těle tagu, za ukončovací značkou ho zase zruší.
    </comment>
  </fulltag>
  <tag>
    <name>set</name>
    <function>setProperty</function>
    <attribute>
      <name>property</name>
      <type>propertyReference</type>
      <comment>Property, která se má nastavit</comment>
    </attribute>
    <attribute>
      <name>value</name>
      <comment>Hodnota, na kterou se má "property" nastavit</comment>
    </attribute>
    <comment>Nastaví "value" do "property".</comment>
  </tag>
  <property>
    <name>null</name>
    <getFunction>getNull</getFunction>
    <comment>
      Vrací "null".
    </comment>
  </property>
  <property>
    <name>true</name>
    <getFunction>getTrue</getFunction>
    <comment>
      Vrací "true".
    </comment>
  </property>
  <property>
    <name>false</name>
    <getFunction>getFalse</getFunction>
    <comment>
      Vrací "false".
    </comment>
  </property>
  <decorator>
    <function>decorateAnyAttribute</function>
    <attribute>
      <name>anyAttribute</name>
      <comment>Asociativní pole pro any attribute.</comment>
    </attribute>
    <features>
      <modifiesAttributes />
    </features>
    <comment>Předá hodnotu atributu jako asociavní pole pro any atribut tagy, na kterém je použit.</comment>
  </decorator>
</taglib>
