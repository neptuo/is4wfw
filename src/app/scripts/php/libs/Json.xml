<?xml version="1.0" encoding="utf-8" ?>
<taglib xmlns="http://schemas.neptuo.com/xsd/is4wfw/taglib.xsd">
  <comment>
    Knihovna pro zpracování JSON vstupu a generování JSON výstupu.
  </comment>
  <fulltag>
    <name>output</name>
    <function>processOutput</function>
    <attribute>
      <name>format</name>
      <type>string</type>
      <default>indented</default>
      <comment>Formátování výstupu. Možné hodnoty "indented" nebo "inline".</comment>
    </attribute>
    <comment>
      Nastaví odpověď na JSON a své tělo použije pro definici odpovědi.
    </comment>
  </fulltag>
  <fulltag>
    <name>input</name>
    <function>processInput</function>
    <comment>
      Zpracuje obsah těla požadavku jako JSON objekt a použije svojí šablony pro průchod objektem a nastavení edit modelu.
      Vytvoří edit model a spouští fáze "submit", "save", "saved".
      Pokud průchod šablonou skončí validační chybou, vrací 400 a JSON ve formátu "https://is4wfw.neptuo.com/api-responses/validation-error" a zbytek stránky je ignorován.
      Pokud průchod šablonou skončí výjimkou v save fázi, vrací 500 a JSON ve formátu "https://is4wfw.neptuo.com/api-responses/exception" a zbytek stránky je ignorován.
    </comment>
  </fulltag>
  <fulltag>
    <name>fetch</name>
    <function>fetch</function>
    <attribute>
      <name>url</name>
      <required />
      <comment>
        URL adresa, ze které se mají stáhnout data.
      </comment>
    </attribute>
    <attribute>
      <name>header</name>
      <prefix />
      <comment>
        HTTP hlavičky přidané k požadavku.
      </comment>
    </attribute>
    <attribute>
      <name>basicUsername</name>
      <comment>
        Optional username pro basic authentication.
      </comment>
    </attribute>
    <attribute>
      <name>basicPassword</name>
      <comment>
        Optional password pro basic authentication.
      </comment>
    </attribute>
    <attribute>
      <name>cache</name>
      <type>number</type>
      <default>0</default>
      <comment>
        Jak dlouho znovu používat předchozí odpověď místo nového stahování dat.
      </comment>
    </attribute>
    <comment>
      Server-side fetch ze zadané URL. Šablonu zpracuje jako v módu input, ale nevytváří edit model.
      Pokud je použita cache, status kód je vždy 200 (success).
    </comment>
  </fulltag>
  <fulltag>
    <name>object</name>
    <function>processObject</function>
    <comment>
      Vygeneruje do výstupu JSON objekt. Své tělo je jeho obsahem.
      Zvaliduje, že aktuální položka na vstup je objekt.
    </comment>
  </fulltag>
  <fulltag>
    <name>array</name>
    <function>processArray</function>
    <comment>
      Vygeneruje do výstupu JSON pole. Své tělo je jeho obsahem.
      Zvaliduje, že aktuální položka na vstup je pole a své tělo spustí pro každou položku.
    </comment>
  </fulltag>
  <tag>
    <name>key</name>
    <function>processKey</function>
    <attribute>
      <name>name</name>
      <type>string</type>
      <required />
      <comment>Název JSON klíče.</comment>
    </attribute>
    <attribute>
      <name>value</name>
      <required />
      <comment>Hodnota JSON hodnoty.</comment>
    </attribute>
    <attribute>
      <name>type</name>
      <type>string</type>
      <default>string</default>
      <comment>Typ JSON hodnoty. Možné hodnoty "string", "number", "bool".</comment>
    </attribute>
    <comment>
      Vygeneruje do výstupu JSON dvojici klíč-hodnota. "type" je použit pro správný escape hodnoty.
      Nefunguje ve vstupním módu.
    </comment>
  </tag>
  <fulltag>
    <name>key</name>
    <function>processKeyWithBody</function>
    <attribute>
      <name>name</name>
      <type>string</type>
      <default as="unused" />
      <comment>Hodnota JSON klíče.</comment>
    </attribute>
    <comment>
      Vygeneruje do výstupu JSON dvojici klíč-hodnota. Své tělo je jeho obsahem.
      Nastaví jako aktuální položku hodnotu klíče z "name". Pokud je použit bez "name", spuští šablonu pro každý key-value v aktuálním objektu
    </comment>
  </fulltag>
  <property>
    <name>key</name>
    <getFunction>getInputKey</getFunction>
    <comment>
      Vrací klíč z inputu uvnitř "json:key" pokud je použit bez "name".
      Při outputu nedělá nic.
    </comment>
  </property>
  <property>
    <name>value</name>
    <getFunction>getInputValue</getFunction>
    <comment>
      Vrací hodnotu klíče z inputu.
      Při outputu nedělá nic.
    </comment>
  </property>
  <property>
    <name>arrayIndex</name>
    <getFunction>getArrayIndex</getFunction>
    <comment>
      Vrací index položky uvnitř "json:array" v input módu.
      Při outputu nedělá nic.
    </comment>
  </property>
  <property>
    <name>fetchStatusCode</name>
    <getFunction>getFetchStatusCode</getFunction>
    <comment>
      Vrací status kód requestu uvnitř "json:fetch".
      Nefunguje mimo "json:fetch".
    </comment>
  </property>
  <property>
    <name>fetchSuccess</name>
    <getFunction>getFetchSuccess</getFunction>
    <comment>
      Vrací true pokud request uvnitř "json:fetch" dopadl úspěchem (2xx).
      Nefunguje mimo "json:fetch".
    </comment>
  </property>
</taglib>
